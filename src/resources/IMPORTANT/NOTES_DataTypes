https://softuni.bg/trainings/resources/officedocument/87819/data-types-and-variables-exercise-programming-fundamentals-with-java-september-2023/4220

1 byte of memory = 8 bit

Type                Default value           Min Value               Max Value                       Size

byte                    0                   -128(-2^7)              127 (2^7 -1)                    8 bit
short                   0               -32768 (-2^15)              32767 (2^15 -1)                 16 bit
int                     0               -2147483648 (-2^31)         2147483647 (2^31 - 1)           32 bit
long                    0               -9223372036854775808(-2^63) 9223372036854775807 (2^63-1)    64 bit

byte, short, int, long -> %d
--------------------
Floating point types
Real numbers are by default interpreted as double
One should explicitly convert them to float
difference in precision:
float floatPI = 3.141592653589793238f; // print 3.1415927
double doublePI = 3.141592653589793238 //print 3.141592653589793238

Type                Default value           Min Value               Max Value               Size

float                      0.0F                                                             32 bit (precision of 7 digits)
double                     0.0D                                                             64 bit (precision of 15-16 digits)

10/4            // 2 (integer division)
10/4.0          // 2.5 (real division)
10/0.0          //Infinity
-10/0.0         //-Inifnity
0/0.0           NaN (not a number)
8 % 2.5         //0.5 (3*2.5 + 0.5 = 8) returns the remainder
10/0            //ArithmeticEcxeption

print format: %.0f (zero floating points) , %.2f (two digits after the floating point)

Calculations with high precision

BigDecimal number = new BigDecimal(0);
number = number.add(BigDecimal.valueOf(2.5));
number = number.subtract(BigDecimal.valueOf(1.5));
number = number.multiply(BigDecimal.valueOf(2));
number = number.divide(BigDecimal.valueOf(2));

Conversions

Implicit conversion - float to double - smallest to larger size:
float m = 1.74f;
double h = m;

Explicit conversion - larger to smaller size - precision can be lost:
double size = 4.14;                 // double is 64 bit
int intSize = (int) size;   // 4  // int is 32 bit

Boolean variables

boolean bool = (a == 1);
print(bool); // true

char a = 'a';
default value '\0'
int n = (int) a; - conversion to ASCII code
format print: %c
%n - format for new line

escaping symbols:
\'
\\
\"
\n - for new line
\t - tab

String
%s
concatenation: "a" + 1  // a1 string

String.join(..., ...);
String text = String.format("%d sth", someNum); - when we are going to use that text further for different things, we can assign it to a string variable
//print (text)
